.TH RECOVERJPEG "1" "July 2012" "recoverjpeg" "User Commands"
.SH NAME
recoverjpeg \- recover jpeg pictures from a filesystem image
.SH SYNOPSIS
.B recoverjpeg
[options] device
.SH DESCRIPTION
.B Recoverjpeg
tries to identify jpeg pictures from a filesystem image. To achieve
this goal, it scans the filesystem image and looks for a jpeg structure at
blocks starting at 512 bytes boundaries.

Salvaged jpeg pictures are stored by default under the name \fIimageXXXXX.jpg\fP
where \fIXXXXX\fP is a five digit number starting at zero. If there are
more than 100,000 recovered pictures, \fBrecoverjpeg\fP will start using
six figures numbers and more as soon as needed, but the 100,000 first
ones will use a five figures number. Options \-f and \-i can override this
behaviour.

.SH OPTIONS
.TP
.B \-h
Display an help message.
.TP
.B \-b blocksize
Set the size of blocks in bytes. On most file systems, setting it to
512 (the default) will work fine as any large file will be stored on
512 bytes boundaries. Setting it to 1 maximize the chances of
finding very small files if the filesystems aggregates them (UFS
for example) at the expense of a much longer running time.
.TP
.B \-d formatstring
Set the directory format string (printf-style, default: use the
current directory). When used, 0 will be used for the 100 first images,
1 for the 100 next images, and so on. The goal of this option is to
circumvent the directory size limit imposed by some file systems.
.TP
.B \-f formatstring
Set the file name format string (printf-style, default: "image%05d.jpg").
It is used with the image index as an integer argument.
.TP
.B \-i integerindex
Set the initial index value for image numbering (default: 0).
.TP
.B \-m maxsize
Maximum size of extract jpeg files. If a file would be larger than that,
it is discarded. The default is 6 MiB.
.TP
.B \-q
Be quiet and do not display anything.
.TP
.B \-r readsize
Set the readsize in bytes. By default, this is 128 MiB.
Using a large readsize reduces the number of system calls but consumes
more memory. The readsize will automatically be adjusted to be a multiple
of the system page size. It \fBmust\fP be greater than the \fImaxsize\fP
parameter.
.TP
.B \-s cutoffsize
Set the cutoff size in bytes. Files smaller than that will be ignored.
.TP
.B \-v
Be verbose and describes the process of jpeg identification. By default, if
this flag is not used,
.B recoverjpeg
will print a progress bar showing how
much it has analyzed already and how many jpeg pictures have been recovered.
.TP
.B \-V
Display program version and exit.

.P
All the sizes may be suffixed by a \fIk\fP, \fIm\fP or \fIg\fP letter
to indicate KiB, MiB or GiB. For example, 6m correspond to 6 MiB
(6291456 bytes).

.SH EXAMPLES
Recover as many pictures as possible from the memory card located in
\fI/dev/sdc\fP:

  recoverjpeg /dev/sdc

Do the same thing but ignore files smaller than one megabyte:

  recoverjpeg -s 1m /dev/sdc

Recover as many pictures as possible from a crashed ReiserFS file system
(which does not necessarily store pictures at block boundaries) in
\fI/dev/hdb1\fP:

  recoverjpeg \-b 1 /dev/hdb1

Do the same thing in a memory constrained environment where no more than
16MB of RAM can be used for the operation:

  recoverjpeg \-b 1 \-r 16m /dev/hdb1

.SH AUTHOR
.B Recoverjpeg
has been written by Samuel Tardieu <sam@rfc1149.net>.

If \fBrecoverjpeg\fP saves your day and you liked it, you are welcome
to send me the best rescued ones by email (please send only 800x600
versions of the pictures) and authorize me to put them online
(indicate which contact information you want me to use for credits).

.SH COPYRIGHT
Copyright (c) 2004-2012 Samuel Tardieu <sam@rfc1149.net>
This is free software; see the source for copying conditions. There is
NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.

.SH "SEE ALSO"
\fIrecovermov\fP(1),
\fIsort-pictures\fP(1)

.SH KNOWN BUGS
.B Recoverjpeg
does not include a complete jpeg parser. You may need to use
sort-pictures afterwards to identify bogus pictures. Some
pictures may be corrupted but have a correct structure; in this case, the
image may be garbled. There is no automated way to detect those pictures
with a 100% success rate.
